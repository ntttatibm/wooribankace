

CREATE COMPUTE MODULE IncomingAccountInquiry_Compute1
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL ConstructMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

CREATE PROCEDURE ConstructMessage() BEGIN
    -- SET OutputRoot = InputRoot;
    DECLARE C_KYC_STATUS BOOLEAN;
    SET C_KYC_STATUS = CONTAINS(InputRoot.JSON.Data.result.report.Item.Item[6], 'FULL');

    SET OutputRoot.JSON.Data.account_data.account = InputRoot.JSON.Data.result.report.Item.Item[2];
    SET OutputRoot.JSON.Data.account_data.account_currency = InputRoot.JSON.Data.result.report.Item.Item[4];
    SET OutputRoot.JSON.Data.account_data.account_name = InputRoot.JSON.Data.result.report.Item.Item[3];
    SET OutputRoot.JSON.Data.account_data.account_type = '01';
    SET OutputRoot.JSON.Data.account_data.bank_code = 'WBKHPPKH';
    IF  C_KYC_STATUS THEN
       SET OutputRoot.JSON.Data.account_data.kycStatus = 1;
    END IF;
    SET OutputRoot.JSON.Data.product_code = 'BAKONG'; 
    SET OutputRoot.JSON.Data.result = 'success';
  END;
END MODULE;
